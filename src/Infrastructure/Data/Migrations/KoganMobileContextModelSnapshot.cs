// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kogan.Mobile.Infrastructure.Data.Migrations
{
    [DbContext(typeof(KoganMobileContext))]
    partial class KoganMobileContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("Kogan.Domain.BusinessPartners.BusinessPartner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectKey")
                        .HasMaxLength(16)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(999);

                    b.Property<string>("ObjectType")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1000);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ObjectType", "ObjectKey")
                        .IsUnique();

                    b.ToTable("BusinessPartners");

                    b.HasDiscriminator<string>("Type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Kogan.Mobile.Domain.Mobile.Batch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<string>("Description")
                        .HasMaxLength(254)
                        .HasColumnType("TEXT");

                    b.Property<int>("IdSupplier")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PlanSize")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RedemptionDateEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("SupplierBatchId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SupplierComPrcnt")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdSupplier");

                    b.HasIndex("SupplierBatchId")
                        .IsUnique();

                    b.ToTable("Batches");
                });

            modelBuilder.Entity("Kogan.Mobile.Domain.Mobile.BatchVoucherAssociation", b =>
                {
                    b.Property<int>("IdBatch")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdVoucher")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SalesPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdBatch", "IdVoucher");

                    b.HasIndex("IdVoucher");

                    b.ToTable("BatchVoucherAssociation");
                });

            modelBuilder.Entity("Kogan.Mobile.Domain.Mobile.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("PlanDurationDays")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SimType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("WebSku")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WebSku")
                        .IsUnique();

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("Kogan.Mobile.Domain.Mobile.VoucherPin", b =>
                {
                    b.Property<int>("IdBatch")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdVoucher")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PinNumber")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsExpired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsRedeemed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsSold")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Msisdn")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.HasKey("IdBatch", "IdVoucher", "PinNumber");

                    b.ToTable("VoucherPins");
                });

            modelBuilder.Entity("Kogan.Mobile.Domain.BusinessPartners.Customer", b =>
                {
                    b.HasBaseType("Kogan.Domain.BusinessPartners.BusinessPartner");

                    b.HasDiscriminator().HasValue("C");
                });

            modelBuilder.Entity("Kogan.Mobile.Domain.BusinessPartners.Supplier", b =>
                {
                    b.HasBaseType("Kogan.Domain.BusinessPartners.BusinessPartner");

                    b.Property<decimal>("DefComPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(86m);

                    b.HasDiscriminator().HasValue("S");
                });

            modelBuilder.Entity("Kogan.Mobile.Domain.Mobile.Batch", b =>
                {
                    b.HasOne("Kogan.Mobile.Domain.BusinessPartners.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("IdSupplier")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Kogan.Mobile.Domain.Mobile.BatchVoucherAssociation", b =>
                {
                    b.HasOne("Kogan.Mobile.Domain.Mobile.Batch", "Batch")
                        .WithMany("Vouchers")
                        .HasForeignKey("IdBatch")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kogan.Mobile.Domain.Mobile.Voucher", "Voucher")
                        .WithMany("Batches")
                        .HasForeignKey("IdVoucher")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Batch");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("Kogan.Mobile.Domain.Mobile.VoucherPin", b =>
                {
                    b.HasOne("Kogan.Mobile.Domain.Mobile.BatchVoucherAssociation", "BatchVoucherAssociation")
                        .WithMany("Pins")
                        .HasForeignKey("IdBatch", "IdVoucher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BatchVoucherAssociation");
                });

            modelBuilder.Entity("Kogan.Mobile.Domain.Mobile.Batch", b =>
                {
                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("Kogan.Mobile.Domain.Mobile.BatchVoucherAssociation", b =>
                {
                    b.Navigation("Pins");
                });

            modelBuilder.Entity("Kogan.Mobile.Domain.Mobile.Voucher", b =>
                {
                    b.Navigation("Batches");
                });
#pragma warning restore 612, 618
        }
    }
}
